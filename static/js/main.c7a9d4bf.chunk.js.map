{"version":3,"sources":["logo.svg","components/EmailBuilder/EmailBuilder.js","components/MainPage/MainPage.js","components/TemplateGallery/TemplateGallery.js","App.js","reportWebVitals.js","index.js"],"names":["EmailBuilder","props","exportHtml","editor","data","design","html","console","log","onDesignLoad","saveDesign","onLoad","state","isEditing","loadDesign","template","window","unlayer","loadBlank","edit","templateNameEditing","templateName","templateData","name","this","onChange","evt","setState","target","value","type","onClick","ref","appearance","theme","Component","MainPage","TemplateGallery","match","useRouteMatch","path","exact","to","url","templates","length","map","el","i","array","pathname","id","render","location","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7a9d4bf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport EmailEditor from 'react-email-editor'\n\nimport sample from '../../assets/sample.json'\nclass EmailBuilder extends Component {\n    constructor(props) {\n        super(props);\n        // console.log('EmailBuilderProps', props)\n        this.state = {\n            isEditing: props.edit,\n            templateNameEditing: false,\n            templateName: props.templateData ? props.templateData.name : \"\",\n            template: props.templateData ? props.templateData.template : \"\"\n        };\n    }\n\n\n    exportHtml = () => {\n        this.editor.exportHtml(data => {\n            const { design, html } = data\n            console.log('exportHtml', html)\n        })\n    }\n    onDesignLoad = (data) => {\n        console.log('onDesignLoad', data);\n    };\n\n    saveDesign = () => {\n        this.editor.saveDesign(design => {\n            console.log('saveDesign', design)\n        })\n    }\n\n    onLoad = () => {\n        if (this.state.isEditing) {\n            if (this.editor && this.editor.loadDesign) {\n                this.editor.loadDesign(this.state.template)\n            } else if (window.unlayer) window.unlayer.loadDesign(this.state.template)\n\n\n        } else {\n            if (this.editor && this.editor.loadBlank) {\n                this.editor.loadBlank();\n            } else if (window.unlayer) window.unlayer.loadBlank();\n        }\n\n    }\n\n    onDesignLoad(data) {\n        console.log('onDesignLoad', data)\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.templateNameEditing ?\n                    (\n                        <div>\n                            <input onChange={(evt) => { this.setState({ templateName: evt.target.value }) }} type=\"text\" value={this.state.templateName} />\n                            <button onClick={(evt) => { this.setState({ templateNameEditing: !this.state.templateNameEditing }) }}>Save Name</button>\n                        </div>\n                    )\n                    :\n                    (\n                        <div onClick={(evt) => { this.setState({ templateNameEditing: !this.state.templateNameEditing }) }}>\n                            <h1>\n                                {this.state.templateName}\n                            </h1>\n                        </div>\n                    )\n                }\n                <button onClick={this.saveDesign}>Save Design</button>\n                <button onClick={this.exportHtml}>Export HTML</button>\n\n                <EmailEditor\n                    ref={editor => this.editor = editor}\n                    appearance={{ theme: 'dark' }}\n                    onLoad={this.onLoad}\n                    onDesignLoad={this.onDesignLoad}\n                />\n            </div>\n        );\n    }\n}\n\nexport default EmailBuilder;","import React, { Component } from 'react';\nimport EmailBuilder from '../EmailBuilder/EmailBuilder'\nclass MainPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (\n            <EmailBuilder />\n        );\n    }\n}\n\nexport default MainPage;","import React, { Component } from 'react';\nimport { Switch, Route, Link, useRouteMatch } from 'react-router-dom';\nimport EmailBuilder from '../EmailBuilder/EmailBuilder'\n\nimport data from '../../assets/collection.json'\n\nconst TemplateGallery = (props) => {\n    const match = useRouteMatch();\n    return (\n        <Switch>\n            <Route path={match.path} exact={true}>\n                <div>\n                    <h1>My Designs</h1>\n\n                    <p><Link to={`${match.url}new`}>New Design</Link></p>\n                </div>\n                {data.templates.length ? data.templates.map((el, i, array) => {\n                    return (\n                        <div key={i}>\n\n                            <p><Link to={{ pathname: `${match.url}edit/${el.id}`, state: el }}>{i + 1}. {el.name}</Link></p>\n                        </div>\n                    )\n                }) : <div> No Templates Available</div>}\n            </Route>\n            <Route path={`${match.path}/new`} exact={true} render={(props) => {\n                return <EmailBuilder {...props} edit={false} />\n            }} />\n\n\n            <Route path={`${match.path}/edit/:designId`} exact={true} render={(props) => {\n                return <EmailBuilder {...props} edit={true} templateData={props.location.state} />\n            }} />\n        </Switch>\n\n    );\n};\n\nexport default TemplateGallery;","import logo from './logo.svg';\nimport './App.css';\n// import { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\nimport { HashRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\nimport MainPage from './components/MainPage/MainPage'\nimport TemplateGallery from './components/TemplateGallery/TemplateGallery'\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path={`/`} exact={true}>\n          <MainPage />\n        </Route>\n        <Route path={`/templates`}>\n          <TemplateGallery />\n        </Route>\n        {/* <Redirect to=\"/\"></Redirect> */}\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}